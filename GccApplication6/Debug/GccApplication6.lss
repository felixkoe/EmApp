
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000242  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000242  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000242  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008a1  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d0  00000000  00000000  00000be5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000411  00000000  00000000  000012b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000016c  00000000  00000000  000016c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000042c  00000000  00000000  00001834  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022e  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00001e8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 91 00 	jmp	0x122	; 0x122 <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__vector_3>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 dd 00 	call	0x1ba	; 0x1ba <main>
  88:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <InterruptInnit>:
	
	if((counter & (1 << 2)) != 0){
		PORTD |= (1<<PORTD7);
	}
	else{
		PORTD &= ~(1<<PORTD7);
  90:	e9 e6       	ldi	r30, 0x69	; 105
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	83 60       	ori	r24, 0x03	; 3
  98:	80 83       	st	Z, r24
  9a:	8d b3       	in	r24, 0x1d	; 29
  9c:	81 60       	ori	r24, 0x01	; 1
  9e:	8d bb       	out	0x1d, r24	; 29
  a0:	85 b5       	in	r24, 0x25	; 37
  a2:	85 60       	ori	r24, 0x05	; 5
  a4:	85 bd       	out	0x25, r24	; 37
  a6:	85 b5       	in	r24, 0x25	; 37
  a8:	8d 7f       	andi	r24, 0xFD	; 253
  aa:	85 bd       	out	0x25, r24	; 37
  ac:	ee e6       	ldi	r30, 0x6E	; 110
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	80 81       	ld	r24, Z
  b2:	81 60       	ori	r24, 0x01	; 1
  b4:	80 83       	st	Z, r24
  b6:	08 95       	ret

000000b8 <TimerInnit>:
  b8:	84 b5       	in	r24, 0x24	; 36
  ba:	8e 7f       	andi	r24, 0xFE	; 254
  bc:	84 bd       	out	0x24, r24	; 36
  be:	84 b5       	in	r24, 0x24	; 36
  c0:	8d 7f       	andi	r24, 0xFD	; 253
  c2:	84 bd       	out	0x24, r24	; 36
  c4:	85 b5       	in	r24, 0x25	; 37
  c6:	87 7f       	andi	r24, 0xF7	; 247
  c8:	85 bd       	out	0x25, r24	; 37
  ca:	84 b5       	in	r24, 0x24	; 36
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	84 bd       	out	0x24, r24	; 36
  d0:	84 b5       	in	r24, 0x24	; 36
  d2:	8f 77       	andi	r24, 0x7F	; 127
  d4:	84 bd       	out	0x24, r24	; 36
  d6:	08 95       	ret

000000d8 <PinInnit>:
  d8:	84 b1       	in	r24, 0x04	; 4
  da:	87 60       	ori	r24, 0x07	; 7
  dc:	84 b9       	out	0x04, r24	; 4
  de:	8a b1       	in	r24, 0x0a	; 10
  e0:	88 68       	ori	r24, 0x88	; 136
  e2:	8a b9       	out	0x0a, r24	; 10
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	8d 7f       	andi	r24, 0xFD	; 253
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	85 b1       	in	r24, 0x05	; 5
  ec:	8e 7f       	andi	r24, 0xFE	; 254
  ee:	85 b9       	out	0x05, r24	; 5
  f0:	85 b1       	in	r24, 0x05	; 5
  f2:	8b 7f       	andi	r24, 0xFB	; 251
  f4:	85 b9       	out	0x05, r24	; 5
  f6:	8b b1       	in	r24, 0x0b	; 11
  f8:	8f 77       	andi	r24, 0x7F	; 127
  fa:	8b b9       	out	0x0b, r24	; 11
  fc:	8b b1       	in	r24, 0x0b	; 11
  fe:	87 7f       	andi	r24, 0xF7	; 247
 100:	8b b9       	out	0x0b, r24	; 11
 102:	8a b1       	in	r24, 0x0a	; 10
 104:	8f 7b       	andi	r24, 0xBF	; 191
 106:	8a b9       	out	0x0a, r24	; 10
 108:	8b b1       	in	r24, 0x0b	; 11
 10a:	80 64       	ori	r24, 0x40	; 64
 10c:	8b b9       	out	0x0b, r24	; 11
 10e:	8b b1       	in	r24, 0x0b	; 11
 110:	84 60       	ori	r24, 0x04	; 4
 112:	8b b9       	out	0x0b, r24	; 11
 114:	08 95       	ret

00000116 <setEvent>:
 116:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <event>
 11a:	89 2b       	or	r24, r25
 11c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <event>
 120:	08 95       	ret

00000122 <__vector_1>:
 122:	1f 92       	push	r1
 124:	0f 92       	push	r0
 126:	0f b6       	in	r0, 0x3f	; 63
 128:	0f 92       	push	r0
 12a:	11 24       	eor	r1, r1
 12c:	2f 93       	push	r18
 12e:	3f 93       	push	r19
 130:	4f 93       	push	r20
 132:	5f 93       	push	r21
 134:	6f 93       	push	r22
 136:	7f 93       	push	r23
 138:	8f 93       	push	r24
 13a:	9f 93       	push	r25
 13c:	af 93       	push	r26
 13e:	bf 93       	push	r27
 140:	ef 93       	push	r30
 142:	ff 93       	push	r31
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	0e 94 8b 00 	call	0x116	; 0x116 <setEvent>
 14a:	ff 91       	pop	r31
 14c:	ef 91       	pop	r30
 14e:	bf 91       	pop	r27
 150:	af 91       	pop	r26
 152:	9f 91       	pop	r25
 154:	8f 91       	pop	r24
 156:	7f 91       	pop	r23
 158:	6f 91       	pop	r22
 15a:	5f 91       	pop	r21
 15c:	4f 91       	pop	r20
 15e:	3f 91       	pop	r19
 160:	2f 91       	pop	r18
 162:	0f 90       	pop	r0
 164:	0f be       	out	0x3f, r0	; 63
 166:	0f 90       	pop	r0
 168:	1f 90       	pop	r1
 16a:	18 95       	reti

0000016c <__vector_3>:
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	0f 90       	pop	r0
 178:	0f be       	out	0x3f, r0	; 63
 17a:	0f 90       	pop	r0
 17c:	1f 90       	pop	r1
 17e:	18 95       	reti

00000180 <__vector_16>:
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	8f 93       	push	r24
 18c:	9f 93       	push	r25
 18e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 192:	8f 5f       	subi	r24, 0xFF	; 255
 194:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 198:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 19c:	8d 33       	cpi	r24, 0x3D	; 61
 19e:	30 f0       	brcs	.+12     	; 0x1ac <__vector_16+0x2c>
 1a0:	9b b1       	in	r25, 0x0b	; 11
 1a2:	88 e0       	ldi	r24, 0x08	; 8
 1a4:	89 27       	eor	r24, r25
 1a6:	8b b9       	out	0x0b, r24	; 11
 1a8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ac:	9f 91       	pop	r25
 1ae:	8f 91       	pop	r24
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <main>:
}

int main(void)
{
	//initialize Pins
	PinInnit();
 1ba:	0e 94 6c 00 	call	0xd8	; 0xd8 <PinInnit>
	
	//initialize Interrupts
	InterruptInnit();
 1be:	0e 94 48 00 	call	0x90	; 0x90 <InterruptInnit>
	sei();
 1c2:	78 94       	sei
	
	//initialize Timers
	TimerInnit();
 1c4:	0e 94 5c 00 	call	0xb8	; 0xb8 <TimerInnit>
 1c8:	ff cf       	rjmp	.-2      	; 0x1c8 <main+0xe>

000001ca <_exit>:
 1ca:	f8 94       	cli

000001cc <__stop_program>:
 1cc:	ff cf       	rjmp	.-2      	; 0x1cc <__stop_program>
